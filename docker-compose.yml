version: "3.1"

services:
  app:
    build:
      context: .
    container_name: app
    restart: always
    sysctls:
      net.core.somaxconn: 1024
    environment:
      DD_AGENT_HOST: datadog
      DD_TRACE_AGENT_PORT: 8126
      DD_API_KEY: ${DD_API_KEY}
      DD_TRACE_ANALYTICS_ENABLED: 1
      DD_APM_ENABLED: 1
      DD_APM_NON_LOCAL_TRAFFIC: 1
    restart: always
    ports:
      - "8000:8000"
    command: sh /app/entrypoint.sh
    depends_on:
      - db
      - datadog

  celery:
    build:
      context: .
    container_name: celery
    restart: always
    environment:
      DD_AGENT_HOST: datadog
      DD_TRACE_AGENT_PORT: 8126
      DD_API_KEY: ${DD_API_KEY}
      DD_APM_ENABLED: 1
      DD_APM_NON_LOCAL_TRAFFIC: 1
      REDIS_HOST: redis
      DD_TRACE_ANALYTICS_ENABLED: 1
      DD_HOSTNAME: datadog
    command: ddtrace-run celery worker -A dtf_bot -B --loglevel=info -c=4 # -P gevent
    depends_on:
      - redis
      - datadog

  datadog:
    image: "datadog/agent:7"
    environment:
      DD_API_KEY: ${DD_API_KEY}
      DD_APM_ENABLED: 1
      DD_SITE: "datadoghq.eu"
      DD_APM_NON_LOCAL_TRAFFIC: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro

  redis:
    image: "redis:latest"
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${REDIS_PORT}:6379"
    restart: always
    volumes:
      - ./redis-data:/data

  db:
    image: postgres:latest
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
